// <auto-generated />
using System;
using CMS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CMS.Migrations
{
    [DbContext(typeof(CMSContext))]
    partial class CMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CMS.Models.Banner", b =>
                {
                    b.Property<int>("IdBanner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idBanner")
                        .UseIdentityColumn();

                    b.Property<string>("Header")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("header");

                    b.HasKey("IdBanner")
                        .HasName("PK__Banner__9EAD8FB148F28CEE");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("CMS.Models.Footer", b =>
                {
                    b.Property<int>("IdFooter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idFooter")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryOne")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("categoryOne");

                    b.Property<string>("CategoryThree")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("categoryThree");

                    b.Property<string>("CategoryTwo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("categoryTwo");

                    b.HasKey("IdFooter")
                        .HasName("PK__Footer__78C8288FF9F83368");

                    b.ToTable("Footer");
                });

            modelBuilder.Entity("CMS.Models.Header", b =>
                {
                    b.Property<int>("IdHeader")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idHeader")
                        .UseIdentityColumn();

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("companyName");

                    b.Property<string>("LegendName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("legendName");

                    b.Property<string>("Plans")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("plans");

                    b.Property<string>("SubLegendName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("subLegendName");

                    b.HasKey("IdHeader")
                        .HasName("PK__Header__0DC09BB8C6552F86");

                    b.ToTable("Header");
                });

            modelBuilder.Entity("CMS.Models.Main", b =>
                {
                    b.Property<int>("IdMain")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMain")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryFour")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("categoryFour");

                    b.Property<string>("CategoryFourValue")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("categoryFourValue");

                    b.Property<string>("CategoryOne")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("categoryOne");

                    b.Property<string>("CategoryOneValue")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("categoryOneValue");

                    b.Property<string>("CategoryThree")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("categoryThree");

                    b.Property<string>("CategoryThreeValue")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("categoryThreeValue");

                    b.Property<string>("CategoryTwo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("categoryTwo");

                    b.Property<string>("CategoryTwoValue")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("categoryTwoValue");

                    b.Property<string>("Header")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("header");

                    b.Property<string>("Legend")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("legend");

                    b.Property<string>("TableTitle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tableTitle");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime")
                        .HasColumnName("updated");

                    b.HasKey("IdMain")
                        .HasName("PK__Main__C365D82F1F173CBA");

                    b.ToTable("Main");
                });

            modelBuilder.Entity("CMS.Models.Price", b =>
                {
                    b.Property<int>("IdPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPrice")
                        .UseIdentityColumn();

                    b.Property<string>("CardOneButton")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cardOneButton");

                    b.Property<string>("CardThreeButton")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cardThreeButton");

                    b.Property<string>("CardTwoButton")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cardTwoButton");

                    b.Property<string>("Header")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("header");

                    b.Property<string>("Legend")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("legend");

                    b.Property<string>("PriceCardOneheader")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("priceCardOneheader");

                    b.Property<string>("PriceCardThreeheader")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("priceCardThreeheader");

                    b.Property<string>("PriceCardTwoheader")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("priceCardTwoheader");

                    b.Property<string>("PriceOneBody")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("priceOneBody");

                    b.Property<string>("PriceThreeBody")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("priceThreeBody");

                    b.Property<string>("PriceTwoBody")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("priceTwoBody");

                    b.HasKey("IdPrice")
                        .HasName("PK__Price__3691D506A9A02C0A");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("CMS.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProduct")
                        .UseIdentityColumn();

                    b.Property<string>("ArticleFourBody")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("articleFourBody");

                    b.Property<string>("ArticleFourheader")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("articleFourheader");

                    b.Property<string>("ArticleOneBody")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("articleOneBody");

                    b.Property<string>("ArticleOneheader")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("articleOneheader");

                    b.Property<string>("ArticleThreeBody")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("articleThreeBody");

                    b.Property<string>("ArticleThreeheader")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("articleThreeheader");

                    b.Property<string>("ArticleTwoBody")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("articleTwoBody");

                    b.Property<string>("ArticleTwoheader")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("articleTwoheader");

                    b.Property<string>("Header")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("header");

                    b.Property<string>("Legend")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("legend");

                    b.HasKey("IdProduct")
                        .HasName("PK__Product__5EEC79D1F9FF041A");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("CMS.Models.User", b =>
                {
                    b.Property<int>("iduser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("pass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iduser");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
